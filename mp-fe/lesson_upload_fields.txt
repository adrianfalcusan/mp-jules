                <Grid item xs={12}>
                  <Typography variant="subtitle2" sx={{ color: "white", mb: 2, mt: 2 }}>
                    Lesson Materials (Optional)
                  </Typography>
                </Grid>
                <Grid item xs={12} sm={6}>
                  <Typography variant="body2" sx={{ color: "rgba(255,255,255,0.7)", mb: 1 }}>
                    Video File
                  </Typography>
                  <input
                    accept="video/*"
                    style={{ display: "none" }}
                    id="lesson-video-upload"
                    type="file"
                    onChange={(e) => {
                      const file = e.target.files[0];
                      if (file) {
                        setCurrentLesson(prev => ({ ...prev, videoFile: file }));
                      }
                    }}
                  />
                  <label htmlFor="lesson-video-upload">
                    <Button
                      variant="outlined"
                      component="span"
                      startIcon={<VideoIcon />}
                      sx={{
                        color: "white",
                        borderColor: "rgba(255,255,255,0.3)",
                        "&:hover": {
                          borderColor: "white",
                          background: "rgba(255,255,255,0.1)"
                        }
                      }}
                    >
                      Upload Video
                    </Button>
                  </label>
                  {currentLesson.videoFile && (
                    <Typography variant="caption" sx={{ color: "green", ml: 2 }}>
                      ��� {currentLesson.videoFile.name}
                    </Typography>
                  )}
                </Grid>
                <Grid item xs={12} sm={6}>
                  <Typography variant="body2" sx={{ color: "rgba(255,255,255,0.7)", mb: 1 }}>
                    Audio/Multitrack
                  </Typography>
                  <input
                    accept="audio/*"
                    style={{ display: "none" }}
                    id="lesson-audio-upload"
                    type="file"
                    onChange={(e) => {
                      const file = e.target.files[0];
                      if (file) {
                        setCurrentLesson(prev => ({ ...prev, audioFile: file }));
                      }
                    }}
                  />
                  <label htmlFor="lesson-audio-upload">
                    <Button
                      variant="outlined"
                      component="span"
                      startIcon={<AudioIcon />}
                      sx={{
                        color: "white",
                        borderColor: "rgba(255,255,255,0.3)",
                        "&:hover": {
                          borderColor: "white",
                          background: "rgba(255,255,255,0.1)"
                        }
                      }}
                    >
                      Upload Audio
                    </Button>
                  </label>
                  {currentLesson.audioFile && (
                    <Typography variant="caption" sx={{ color: "green", ml: 2 }}>
                      ��� {currentLesson.audioFile.name}
                    </Typography>
                  )}
                </Grid>
                <Grid item xs={12} sm={6}>
                  <Typography variant="body2" sx={{ color: "rgba(255,255,255,0.7)", mb: 1 }}>
                    PDF Document
                  </Typography>
                  <input
                    accept=".pdf"
                    style={{ display: "none" }}
                    id="lesson-pdf-upload"
                    type="file"
                    onChange={(e) => {
                      const file = e.target.files[0];
                      if (file) {
                        setCurrentLesson(prev => ({ ...prev, pdfFile: file }));
                      }
                    }}
                  />
                  <label htmlFor="lesson-pdf-upload">
                    <Button
                      variant="outlined"
                      component="span"
                      startIcon={<PdfIcon />}
                      sx={{
                        color: "white",
                        borderColor: "rgba(255,255,255,0.3)",
                        "&:hover": {
                          borderColor: "white",
                          background: "rgba(255,255,255,0.1)"
                        }
                      }}
                    >
                      Upload PDF
                    </Button>
                  </label>
                  {currentLesson.pdfFile && (
                    <Typography variant="caption" sx={{ color: "green", ml: 2 }}>
                      ��� {currentLesson.pdfFile.name}
                    </Typography>
                  )}
                </Grid>
                <Grid item xs={12} sm={6}>
                  <Typography variant="body2" sx={{ color: "rgba(255,255,255,0.7)", mb: 1 }}>
                    Additional Resources
                  </Typography>
                  <input
                    accept="*/*"
                    style={{ display: "none" }}
                    id="lesson-resource-upload"
                    type="file"
                    onChange={(e) => {
                      const file = e.target.files[0];
                      if (file) {
                        setCurrentLesson(prev => ({ ...prev, resourceFile: file }));
                      }
                    }}
                  />
                  <label htmlFor="lesson-resource-upload">
                    <Button
                      variant="outlined"
                      component="span"
                      startIcon={<UploadIcon />}
                      sx={{
                        color: "white",
                        borderColor: "rgba(255,255,255,0.3)",
                        "&:hover": {
                          borderColor: "white",
                          background: "rgba(255,255,255,0.1)"
                        }
                      }}
                    >
                      Upload Resource
                    </Button>
                  </label>
                  {currentLesson.resourceFile && (
                    <Typography variant="caption" sx={{ color: "green", ml: 2 }}>
                      ��� {currentLesson.resourceFile.name}
                    </Typography>
                  )}
                </Grid>
